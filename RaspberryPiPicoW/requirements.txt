# Raspberry Pi Pico W - DataLogger IoT
# Instruções de Configuração

## Pré-requisitos
- Raspberry Pi Pico W
- Pico SDK instalado e configurado
- CMake 3.13+
- Compilador ARM GCC
- VS Code com extensão Raspberry Pi Pico (recomendado)

## Hardware Necessário
- Sensores I2C: AHT20, BMP280, MPU6050
- Display OLED SSD1306 (128x64)
- Botões, LEDs, Buzzer (opcional)
- Protoboard e jumpers para conexões

## Configuração de Credenciais

IMPORTANTE: Antes de compilar, você deve configurar suas credenciais pessoais!

1. Copie o arquivo de exemplo:
   cp lib/user_data.h.example lib/user_data.h

2. Edite o arquivo lib/user_data.h com suas informações:

```c
#ifndef USER_DATA_H
#define USER_DATA_H

// Configurações Wi-Fi
#define WIFI_SSID "SUA_REDE_WIFI"
#define WIFI_PASSWORD "SUA_SENHA_WIFI"

// Configurações MQTT
#define MQTT_SERVER "SEU_BROKER_MQTT"     // Ex: 192.168.1.100
#define MQTT_USERNAME "SEU_USUARIO_MQTT"
#define MQTT_PASSWORD "SUA_SENHA_MQTT"

#endif
```

## Compilação

1. Crie o diretório de build:
   mkdir build && cd build

2. Configure o CMake:
   cmake ..

3. Compile o projeto:
   make -j4

4. O arquivo .uf2 será gerado em build/

## Instalação no Pico W

1. Segure o botão BOOTSEL e conecte o Pico W ao PC
2. Copie o arquivo .uf2 para o drive que aparecer
3. O Pico W reiniciará automaticamente

## Conexões I2C

- SDA: GPIO 0
- SCL: GPIO 1
- VCC: 3.3V
- GND: GND

## Sensores Suportados

- AHT20: Temperatura e Umidade
- BMP280: Pressão e Altitude  
- MPU6050: Acelerômetro e Giroscópio
- SSD1306: Display OLED

## Troubleshooting

- Verifique as conexões I2C
- Confirme as credenciais Wi-Fi
- Verifique se o broker MQTT está acessível
- Use o monitor serial para debug (115200 baud)

## Estrutura do Projeto

lib/          - Bibliotecas de sensores e drivers
src/          - Código fonte principal (se houver)
main.c        - Arquivo principal
CMakeLists.txt - Configuração de build

Para mais informações, consulte o README principal do projeto.